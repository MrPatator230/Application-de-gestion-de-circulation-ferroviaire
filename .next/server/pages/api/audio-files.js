"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/audio-files";
exports.ids = ["pages/api/audio-files"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Faudio-files&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Faudio-files.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Faudio-files&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Faudio-files.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_audio_files_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/audio-files.js */ \"(api)/./pages/api/audio-files.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_audio_files_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_audio_files_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/audio-files\",\n        pathname: \"/api/audio-files\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_audio_files_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmF1ZGlvLWZpbGVzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZhdWRpby1maWxlcy5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDRTtBQUMxRDtBQUN1RDtBQUN2RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsc0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHNEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLHlHQUFtQjtBQUNsRDtBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2F1ZGlvLWZpbGVzLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hdWRpby1maWxlc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2F1ZGlvLWZpbGVzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Faudio-files&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Faudio-files.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/audio-files.js":
/*!**********************************!*\
  !*** ./pages/api/audio-files.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Define paths\nconst audioDir = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'public', 'audio');\nconst foldersFile = path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, 'folders.json');\nconst metadataFile = path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, 'metadata.json');\n// Ensure directories and files exist\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(audioDir)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(audioDir, {\n        recursive: true\n    });\n}\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(foldersFile)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(foldersFile, JSON.stringify({\n        folders: []\n    }));\n}\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(metadataFile)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(metadataFile, JSON.stringify({}));\n}\n// Helper functions\nfunction getFolders() {\n    try {\n        const data = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(foldersFile, 'utf8');\n        return JSON.parse(data).folders;\n    } catch (error) {\n        console.error('Error reading folders:', error);\n        return [];\n    }\n}\nfunction saveFolders(folders) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(foldersFile, JSON.stringify({\n        folders\n    }, null, 2));\n}\nfunction getMetadata() {\n    try {\n        const data = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(metadataFile, 'utf8');\n        return JSON.parse(data);\n    } catch (error) {\n        console.error('Error reading metadata:', error);\n        return {};\n    }\n}\nfunction saveMetadata(metadata) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(metadataFile, JSON.stringify(metadata, null, 2));\n}\nfunction findFileByIdWithExtension(fileId) {\n    try {\n        const files = fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(audioDir);\n        return files.find((file)=>file !== 'folders.json' && file !== 'metadata.json' && file.startsWith(fileId));\n    } catch (error) {\n        console.error('Error finding file:', error);\n        return null;\n    }\n}\nasync function handler(req, res) {\n    const { method, query } = req;\n    try {\n        switch(method){\n            case 'GET':\n                // List files or folders\n                if (query.type === 'folders') {\n                    const folders = getFolders();\n                    res.status(200).json({\n                        folders\n                    });\n                } else {\n                    const folderId = query.folderId;\n                    const metadata = getMetadata();\n                    // Get all files in the audio directory\n                    const files = fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(audioDir).filter((file)=>file !== 'folders.json' && file !== 'metadata.json').map((filename)=>{\n                        const id = filename.split('-')[0]; // Get the ID part before the first hyphen\n                        const fileMetadata = metadata[id] || {};\n                        const stats = fs__WEBPACK_IMPORTED_MODULE_0___default().statSync(path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, filename));\n                        return {\n                            id,\n                            name: fileMetadata.name || filename,\n                            url: `/audio/${filename}`,\n                            folderId: fileMetadata.folderId || null,\n                            size: stats.size,\n                            type: fileMetadata.type || 'audio/mpeg',\n                            createdAt: fileMetadata.createdAt || stats.birthtime\n                        };\n                    }).filter((file)=>{\n                        // If a folder ID is provided, only return files in that folder\n                        if (folderId) {\n                            const fileMetadata = metadata[file.id];\n                            return fileMetadata && fileMetadata.folderId === folderId;\n                        }\n                        // If no folder ID is provided, return files that are not in any folder\n                        return !metadata[file.id]?.folderId;\n                    });\n                    res.status(200).json({\n                        files\n                    });\n                }\n                break;\n            case 'POST':\n                // Create new folder\n                if (query.type === 'folders') {\n                    const { name } = req.body;\n                    if (!name) {\n                        return res.status(400).json({\n                            error: 'Le nom du dossier est requis'\n                        });\n                    }\n                    const folders = getFolders();\n                    const newFolder = {\n                        id: Date.now().toString(),\n                        name,\n                        createdAt: new Date().toISOString()\n                    };\n                    folders.push(newFolder);\n                    saveFolders(folders);\n                    res.status(201).json(newFolder);\n                } else {\n                    res.status(400).json({\n                        error: 'Opération invalide'\n                    });\n                }\n                break;\n            case 'PUT':\n                if (query.type === 'folders' && query.id) {\n                    // Rename folder\n                    const { name } = req.body;\n                    const folders = getFolders();\n                    const folderIndex = folders.findIndex((f)=>f.id === query.id);\n                    if (folderIndex === -1) {\n                        return res.status(404).json({\n                            error: 'Dossier non trouvé'\n                        });\n                    }\n                    folders[folderIndex].name = name;\n                    saveFolders(folders);\n                    res.status(200).json(folders[folderIndex]);\n                } else if (query.type === 'move' && query.id) {\n                    // Move file to different folder\n                    const { folderId } = req.body;\n                    const metadata = getMetadata();\n                    if (!metadata[query.id]) {\n                        metadata[query.id] = {};\n                    }\n                    metadata[query.id].folderId = folderId;\n                    saveMetadata(metadata);\n                    res.status(200).json({\n                        success: true\n                    });\n                } else if (query.type === 'rename' && query.id) {\n                    // Rename file\n                    const { name } = req.body;\n                    const metadata = getMetadata();\n                    if (!metadata[query.id]) {\n                        metadata[query.id] = {};\n                    }\n                    metadata[query.id].name = name;\n                    saveMetadata(metadata);\n                    res.status(200).json({\n                        success: true\n                    });\n                } else {\n                    res.status(400).json({\n                        error: 'Opération invalide'\n                    });\n                }\n                break;\n            case 'DELETE':\n                if (query.type === 'folders' && query.id) {\n                    // Delete folder\n                    const folders = getFolders();\n                    const newFolders = folders.filter((f)=>f.id !== query.id); // Fixed the condition here\n                    saveFolders(newFolders);\n                    // Update files in the folder to have no folder\n                    const metadata = getMetadata();\n                    Object.keys(metadata).forEach((fileId)=>{\n                        if (metadata[fileId].folderId === query.id) {\n                            metadata[fileId].folderId = null;\n                        }\n                    });\n                    saveMetadata(metadata);\n                    res.status(200).json({\n                        success: true\n                    });\n                } else if (query.id) {\n                    // Delete file\n                    const filename = findFileByIdWithExtension(query.id);\n                    if (!filename) {\n                        return res.status(404).json({\n                            error: 'Fichier non trouvé'\n                        });\n                    }\n                    const filePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, filename);\n                    try {\n                        // Delete the physical file\n                        fs__WEBPACK_IMPORTED_MODULE_0___default().unlinkSync(filePath);\n                        // Remove from metadata\n                        const metadata = getMetadata();\n                        delete metadata[query.id];\n                        saveMetadata(metadata);\n                        res.status(200).json({\n                            success: true\n                        });\n                    } catch (error) {\n                        console.error('Error deleting file:', error);\n                        res.status(500).json({\n                            error: 'Erreur lors de la suppression du fichier: ' + error.message\n                        });\n                    }\n                } else {\n                    res.status(400).json({\n                        error: 'Opération invalide'\n                    });\n                }\n                break;\n            default:\n                res.setHeader('Allow', [\n                    'GET',\n                    'POST',\n                    'PUT',\n                    'DELETE'\n                ]);\n                res.status(405).end(`Method ${method} Not Allowed`);\n        }\n    } catch (error) {\n        console.error('API Error:', error);\n        res.status(500).json({\n            error: 'Erreur interne du serveur: ' + error.message\n        });\n    }\n}\nconst config = {\n    api: {\n        bodyParser: true\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/audio-files.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Faudio-files&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Faudio-files.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();