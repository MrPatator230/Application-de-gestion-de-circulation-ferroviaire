"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/audio-files";
exports.ids = ["pages/api/audio-files"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Faudio-files&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Caudio-files.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Faudio-files&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Caudio-files.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_audio_files_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\audio-files.js */ \"(api-node)/./pages/api/audio-files.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_audio_files_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_audio_files_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/audio-files\",\n        pathname: \"/api/audio-files\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_audio_files_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGYXVkaW8tZmlsZXMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q2F1ZGlvLWZpbGVzLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQ3lEO0FBQ3pEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxzREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsc0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcYXVkaW8tZmlsZXMuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2F1ZGlvLWZpbGVzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYXVkaW8tZmlsZXNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Faudio-files&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Caudio-files.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/audio-files.js":
/*!**********************************!*\
  !*** ./pages/api/audio-files.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Define paths\nconst audioDir = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'public', 'audio');\nconst foldersFile = path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, 'folders.json');\nconst metadataFile = path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, 'metadata.json');\n// Ensure directories and files exist\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(audioDir)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(audioDir, {\n        recursive: true\n    });\n}\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(foldersFile)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(foldersFile, JSON.stringify({\n        folders: []\n    }));\n}\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(metadataFile)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(metadataFile, JSON.stringify({}));\n}\n// Helper functions\nfunction getFolders() {\n    try {\n        const data = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(foldersFile, 'utf8');\n        return JSON.parse(data).folders;\n    } catch (error) {\n        console.error('Error reading folders:', error);\n        return [];\n    }\n}\nfunction saveFolders(folders) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(foldersFile, JSON.stringify({\n        folders\n    }, null, 2));\n}\nfunction getMetadata() {\n    try {\n        const data = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(metadataFile, 'utf8');\n        return JSON.parse(data);\n    } catch (error) {\n        console.error('Error reading metadata:', error);\n        return {};\n    }\n}\nfunction saveMetadata(metadata) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(metadataFile, JSON.stringify(metadata, null, 2));\n}\nfunction findFileByIdWithExtension(fileId) {\n    try {\n        const files = fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(audioDir);\n        return files.find((file)=>file !== 'folders.json' && file !== 'metadata.json' && file.startsWith(fileId));\n    } catch (error) {\n        console.error('Error finding file:', error);\n        return null;\n    }\n}\nasync function handler(req, res) {\n    const { method, query } = req;\n    try {\n        switch(method){\n            case 'GET':\n                // List files or folders\n                if (query.type === 'folders') {\n                    const folders = getFolders();\n                    res.status(200).json({\n                        folders\n                    });\n                } else {\n                    const folderId = query.folderId;\n                    const metadata = getMetadata();\n                    // Get all files in the audio directory\n                    const files = fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(audioDir).filter((file)=>file !== 'folders.json' && file !== 'metadata.json').map((filename)=>{\n                        const id = filename.split('-')[0]; // Get the ID part before the first hyphen\n                        const fileMetadata = metadata[id] || {};\n                        const stats = fs__WEBPACK_IMPORTED_MODULE_0___default().statSync(path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, filename));\n                        return {\n                            id,\n                            name: fileMetadata.name || filename,\n                            url: `/audio/${filename}`,\n                            folderId: fileMetadata.folderId || null,\n                            size: stats.size,\n                            type: fileMetadata.type || 'audio/mpeg',\n                            createdAt: fileMetadata.createdAt || stats.birthtime\n                        };\n                    }).filter((file)=>{\n                        // If a folder ID is provided, only return files in that folder\n                        if (folderId) {\n                            const fileMetadata = metadata[file.id];\n                            return fileMetadata && fileMetadata.folderId === folderId;\n                        }\n                        // If no folder ID is provided, return files that are not in any folder\n                        return !metadata[file.id]?.folderId;\n                    });\n                    res.status(200).json({\n                        files\n                    });\n                }\n                break;\n            case 'POST':\n                // Create new folder\n                if (query.type === 'folders') {\n                    const { name } = req.body;\n                    if (!name) {\n                        return res.status(400).json({\n                            error: 'Le nom du dossier est requis'\n                        });\n                    }\n                    const folders = getFolders();\n                    const newFolder = {\n                        id: Date.now().toString(),\n                        name,\n                        createdAt: new Date().toISOString()\n                    };\n                    folders.push(newFolder);\n                    saveFolders(folders);\n                    res.status(201).json(newFolder);\n                } else {\n                    res.status(400).json({\n                        error: 'Opération invalide'\n                    });\n                }\n                break;\n            case 'PUT':\n                if (query.type === 'folders' && query.id) {\n                    // Rename folder\n                    const { name } = req.body;\n                    const folders = getFolders();\n                    const folderIndex = folders.findIndex((f)=>f.id === query.id);\n                    if (folderIndex === -1) {\n                        return res.status(404).json({\n                            error: 'Dossier non trouvé'\n                        });\n                    }\n                    folders[folderIndex].name = name;\n                    saveFolders(folders);\n                    res.status(200).json(folders[folderIndex]);\n                } else if (query.type === 'move' && query.id) {\n                    // Move file to different folder\n                    const { folderId } = req.body;\n                    const metadata = getMetadata();\n                    if (!metadata[query.id]) {\n                        metadata[query.id] = {};\n                    }\n                    metadata[query.id].folderId = folderId;\n                    saveMetadata(metadata);\n                    res.status(200).json({\n                        success: true\n                    });\n                } else if (query.type === 'rename' && query.id) {\n                    // Rename file\n                    const { name } = req.body;\n                    const metadata = getMetadata();\n                    if (!metadata[query.id]) {\n                        metadata[query.id] = {};\n                    }\n                    metadata[query.id].name = name;\n                    saveMetadata(metadata);\n                    res.status(200).json({\n                        success: true\n                    });\n                } else {\n                    res.status(400).json({\n                        error: 'Opération invalide'\n                    });\n                }\n                break;\n            case 'DELETE':\n                if (query.type === 'folders' && query.id) {\n                    // Delete folder\n                    const folders = getFolders();\n                    const newFolders = folders.filter((f)=>f.id !== query.id); // Fixed the condition here\n                    saveFolders(newFolders);\n                    // Update files in the folder to have no folder\n                    const metadata = getMetadata();\n                    Object.keys(metadata).forEach((fileId)=>{\n                        if (metadata[fileId].folderId === query.id) {\n                            metadata[fileId].folderId = null;\n                        }\n                    });\n                    saveMetadata(metadata);\n                    res.status(200).json({\n                        success: true\n                    });\n                } else if (query.id) {\n                    // Delete file\n                    const filename = findFileByIdWithExtension(query.id);\n                    if (!filename) {\n                        return res.status(404).json({\n                            error: 'Fichier non trouvé'\n                        });\n                    }\n                    const filePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, filename);\n                    try {\n                        // Delete the physical file\n                        fs__WEBPACK_IMPORTED_MODULE_0___default().unlinkSync(filePath);\n                        // Remove from metadata\n                        const metadata = getMetadata();\n                        delete metadata[query.id];\n                        saveMetadata(metadata);\n                        res.status(200).json({\n                            success: true\n                        });\n                    } catch (error) {\n                        console.error('Error deleting file:', error);\n                        res.status(500).json({\n                            error: 'Erreur lors de la suppression du fichier: ' + error.message\n                        });\n                    }\n                } else {\n                    res.status(400).json({\n                        error: 'Opération invalide'\n                    });\n                }\n                break;\n            default:\n                res.setHeader('Allow', [\n                    'GET',\n                    'POST',\n                    'PUT',\n                    'DELETE'\n                ]);\n                res.status(405).end(`Method ${method} Not Allowed`);\n        }\n    } catch (error) {\n        console.error('API Error:', error);\n        res.status(500).json({\n            error: 'Erreur interne du serveur: ' + error.message\n        });\n    }\n}\nconst config = {\n    api: {\n        bodyParser: true\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/audio-files.js\n");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Faudio-files&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Caudio-files.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();