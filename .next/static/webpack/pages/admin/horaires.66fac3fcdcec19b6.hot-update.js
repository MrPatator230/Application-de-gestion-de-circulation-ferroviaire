"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/admin/horaires",{

/***/ "(pages-dir-browser)/./utils/scheduleUtils.js":
/*!********************************!*\
  !*** ./utils/scheduleUtils.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addSchedule: () => (/* binding */ addSchedule),\n/* harmony export */   deleteSchedule: () => (/* binding */ deleteSchedule),\n/* harmony export */   getAllSchedules: () => (/* binding */ getAllSchedules),\n/* harmony export */   getFormattedSchedules: () => (/* binding */ getFormattedSchedules),\n/* harmony export */   syncSchedules: () => (/* binding */ syncSchedules),\n/* harmony export */   updateSchedule: () => (/* binding */ updateSchedule)\n/* harmony export */ });\n/* harmony import */ var _dateUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dateUtils */ \"(pages-dir-browser)/./utils/dateUtils.js\");\n\n// Get all schedules from localStorage\nconst getAllSchedules = ()=>{\n    if (false) {}\n    const schedules = JSON.parse(localStorage.getItem('schedules') || '[]');\n    return schedules;\n};\n// Add a new schedule and sync\nconst addSchedule = (schedule)=>{\n    if (false) {}\n    const schedules = getAllSchedules();\n    const newSchedule = {\n        ...schedule,\n        id: Date.now().toString(),\n        status: 'À l\\'heure',\n        platform: schedule.platform || 'À définir',\n        createdAt: new Date().toISOString()\n    };\n    schedules.push(newSchedule);\n    localStorage.setItem('schedules', JSON.stringify(schedules));\n    return true;\n};\n// Get formatted schedules for display\nconst getFormattedSchedules = function(stationName) {\n    let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'all', date = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : new Date();\n    const schedules = getAllSchedules();\n    // Filter schedules for the station\n    const stationSchedules = schedules.filter((schedule)=>schedule.departureStation === stationName || schedule.arrivalStation === stationName);\n    // Filter by day\n    const daySchedules = (0,_dateUtils__WEBPACK_IMPORTED_MODULE_0__.filterSchedulesByDay)(stationSchedules, date);\n    // Filter by type and format for display\n    return daySchedules.filter((schedule)=>{\n        if (type === 'departures') return schedule.departureStation === stationName;\n        if (type === 'arrivals') return schedule.arrivalStation === stationName;\n        return true;\n    }).map((schedule)=>({\n            id: schedule.id,\n            type: schedule.departureStation === stationName ? 'departure' : 'arrival',\n            time: schedule.departureStation === stationName ? schedule.departureTime : schedule.arrivalTime,\n            destination: schedule.arrivalStation,\n            origin: schedule.departureStation,\n            platform: schedule.platform || 'À définir',\n            train: \"\".concat(schedule.trainType, \" \").concat(schedule.trainNumber),\n            status: schedule.status || 'À l\\'heure',\n            duration: calculateDuration(schedule.departureTime, schedule.arrivalTime)\n        })).sort((a, b)=>{\n        const timeA = a.time.split(':').map(Number);\n        const timeB = b.time.split(':').map(Number);\n        return timeA[0] * 60 + timeA[1] - (timeB[0] * 60 + timeB[1]);\n    });\n};\n// Update an existing schedule\nconst updateSchedule = (id, updates)=>{\n    if (false) {}\n    const schedules = getAllSchedules();\n    const index = schedules.findIndex((s)=>s.id === id);\n    if (index !== -1) {\n        schedules[index] = {\n            ...schedules[index],\n            ...updates\n        };\n        localStorage.setItem('schedules', JSON.stringify(schedules));\n        return true;\n    }\n    return false;\n};\n// Delete a schedule\nconst deleteSchedule = (id)=>{\n    if (false) {}\n    const schedules = getAllSchedules();\n    const filteredSchedules = schedules.filter((s)=>s.id !== id);\n    if (filteredSchedules.length !== schedules.length) {\n        localStorage.setItem('schedules', JSON.stringify(filteredSchedules));\n        return true;\n    }\n    return false;\n};\n// Helper function to calculate duration\nconst calculateDuration = (departureTime, arrivalTime)=>{\n    const [depHours, depMinutes] = departureTime.split(':').map(Number);\n    const [arrHours, arrMinutes] = arrivalTime.split(':').map(Number);\n    const totalDepMinutes = depHours * 60 + depMinutes;\n    const totalArrMinutes = arrHours * 60 + arrMinutes;\n    const diffMinutes = totalArrMinutes - totalDepMinutes;\n    const hours = Math.floor(diffMinutes / 60);\n    const minutes = diffMinutes % 60;\n    return \"\".concat(hours, \"h\").concat(minutes.toString().padStart(2, '0'));\n};\n// Sync schedules with admin-created ones\nconst syncSchedules = ()=>{\n    if (false) {}\n    // Get existing schedules\n    const existingSchedules = getAllSchedules();\n    // Add any missing schedules from test data\n    const testSchedules = [\n        {\n            id: '1',\n            trainNumber: 'TER123',\n            departureStation: 'Seurre',\n            arrivalStation: 'Dijon Ville',\n            departureTime: '09:00',\n            arrivalTime: '10:15',\n            trainType: 'TER',\n            platform: '2',\n            status: 'À l\\'heure',\n            joursCirculation: [\n                'lundi',\n                'mardi',\n                'mercredi',\n                'jeudi',\n                'vendredi'\n            ]\n        }\n    ];\n    const updatedSchedules = [\n        ...existingSchedules\n    ];\n    let hasChanges = false;\n    testSchedules.forEach((testSchedule)=>{\n        if (!existingSchedules.some((s)=>s.id === testSchedule.id)) {\n            updatedSchedules.push(testSchedule);\n            hasChanges = true;\n        }\n    });\n    if (hasChanges) {\n        localStorage.setItem('schedules', JSON.stringify(updatedSchedules));\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/scheduleUtils.js\n"));

/***/ })

});